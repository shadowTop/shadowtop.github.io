<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 影子的博客</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Posts on 影子的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 29 Apr 2020 17:24:54 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Canvas实践 画图板</title>
      <link>http://localhost:1313/post/canvas%E5%AE%9E%E8%B7%B5-%E7%94%BB%E5%9B%BE%E6%9D%BF/</link>
      <pubDate>Wed, 29 Apr 2020 17:24:54 +0800</pubDate>
      
      <guid>http://localhost:1313/post/canvas%E5%AE%9E%E8%B7%B5-%E7%94%BB%E5%9B%BE%E6%9D%BF/</guid>
      <description>上午解决的问题 项目初始话，一开始使用 dom 操作 实现的功能就是鼠标滑过，在当前像素位置生成一个‘点’ 也就是添加div 主要使用到的方法就是canva</description>
    </item>
    
    <item>
      <title>内存图与JS世界</title>
      <link>http://localhost:1313/post/%E5%86%85%E5%AD%98%E5%9B%BE%E4%B8%8Ejs%E4%B8%96%E7%95%8C/</link>
      <pubDate>Tue, 28 Apr 2020 16:49:39 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E5%86%85%E5%AD%98%E5%9B%BE%E4%B8%8Ejs%E4%B8%96%E7%95%8C/</guid>
      <description>操作系统常识 打开浏览器 双击 Chrome 图标，就会运行 chrome.exe 文件 开启 Chrome 进程，作为主进程 主进程会开启一些辅助进程 每新建一个网页，就有可能会开启一个子进程 浏览器</description>
    </item>
    
    <item>
      <title>JavaScript的前世今生</title>
      <link>http://localhost:1313/post/javascript%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/</link>
      <pubDate>Tue, 28 Apr 2020 16:16:55 +0800</pubDate>
      
      <guid>http://localhost:1313/post/javascript%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/</guid>
      <description>JavaScript 概述 JavaScript 历史 布兰登发明了 JS 诞生 布莱登临危受命 （公司要求给浏览器添加一个脚本功能、公司要求这个脚本必须蹭 Java 的流量、布莱登花了十天设计了 JS 的最初</description>
    </item>
    
    <item>
      <title>JavaScript初识</title>
      <link>http://localhost:1313/post/javascript%E5%88%9D%E8%AF%86/</link>
      <pubDate>Tue, 28 Apr 2020 15:08:55 +0800</pubDate>
      
      <guid>http://localhost:1313/post/javascript%E5%88%9D%E8%AF%86/</guid>
      <description>前期准备 软能力 逻辑能力 质疑自己的能力 double check 抽象思维 定了一份报纸 关注了明星微博 用 JS 监听了一个按钮的点击事件 这三件事情用于共同的模式：发布订阅模式</description>
    </item>
    
    <item>
      <title>HTTP全解</title>
      <link>http://localhost:1313/post/http%E5%85%A8%E8%A7%A3/</link>
      <pubDate>Sat, 25 Apr 2020 19:58:57 +0800</pubDate>
      
      <guid>http://localhost:1313/post/http%E5%85%A8%E8%A7%A3/</guid>
      <description>请求与响应 如何发送请求 帮你发送请求的工具叫做用户代理 User Agent 用 Chrome 地址栏 用 curl 命令 后缀并不能表示文件是什么，而是为了告诉 windows 用什么软件去打开它。 我们要</description>
    </item>
    
    <item>
      <title>浅析URL</title>
      <link>http://localhost:1313/post/%E6%B5%85%E6%9E%90url/</link>
      <pubDate>Sat, 25 Apr 2020 17:13:37 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E6%B5%85%E6%9E%90url/</guid>
      <description>URL 包含那几部分，每部分分别有什么作用 URL 包含 协议+ 域名或 IP+端口号+路径+ 查询字符串+锚点 例子 http://www.baidu.com/s?wd=hi&amp;amp;rsv_spt=1#5 作用 协议为 HTTP 协议和 HTTPS 协议，规定访问和返回格式</description>
    </item>
    
    <item>
      <title>Http入门</title>
      <link>http://localhost:1313/post/http%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sat, 25 Apr 2020 16:07:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/http%E5%85%A5%E9%97%A8/</guid>
      <description>网络和 IP 如何获取外网 IP 租用宽带，然后使用路由器广播出来无线 wifi 连接这个 wifi 的设备都是同一个外网 IP 重启路由器可能会被重新分配外网 IP 内网 IP 一般为 192.198.1.1 几</description>
    </item>
    
    <item>
      <title>Css知识总结</title>
      <link>http://localhost:1313/post/css/</link>
      <pubDate>Tue, 21 Apr 2020 08:01:34 +0800</pubDate>
      
      <guid>http://localhost:1313/post/css/</guid>
      <description>浏览器渲染原理 要了解浏览器渲染页面的过程，首先得知道一个名词 &amp;ndash; 关键路径渲染。关键渲染路径是指与当前用户操作有关的内容。例如用户在浏览器中打开</description>
    </item>
    
    <item>
      <title>HTML常用标签</title>
      <link>http://localhost:1313/post/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Mon, 13 Apr 2020 08:49:33 +0800</pubDate>
      
      <guid>http://localhost:1313/post/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      <description>a标签 可以创建通向其他网页、文件、同一页面内的位置、电子邮件地址或任何其他 URL 的超链接。 跳转到外部页面，跳转到内部锚点，跳转到邮箱或者电话 a标</description>
    </item>
    
    <item>
      <title>HTML 入门笔记</title>
      <link>http://localhost:1313/post/html/</link>
      <pubDate>Fri, 10 Apr 2020 13:11:41 +0800</pubDate>
      
      <guid>http://localhost:1313/post/html/</guid>
      <description>HTML 的历史及简介 HTML 是超文本标记语言，用于描述、定义网站内容。 HTML 在 1990 左右诞生，发明人是 Tim Berners-Lee(李爵士) 如何书写 HTML - 起手式 在使用</description>
    </item>
    
    <item>
      <title>如何使用Hugo搭建个人博客</title>
      <link>http://localhost:1313/post/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Fri, 10 Apr 2020 09:48:30 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>安装 hugo.exe 下载 在huge releases 页面 下载例如 hugo_0.68.3_Windows-64bit.zip 的压缩包，具体版本以自己的系统下载 安装配置 将下载好的压缩包解压，将 hugo.exe 放到 E:\Software\hugo 目录下，注意目录不要有空格和中</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/post/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</guid>
      <description>前端代码规范 Front Standard Guide
前端 JS 项目开发规范 本文来自 B 站：老陈打码。
规范的目的是为了编写高质量的代码，让你的团队成员每天得心情都是愉悦的，大家在一起是快乐的。
引自《阿里规约》的开头片段：
&amp;mdash;-现代软件架构的复杂性需要协同开发完成，如何高效地协同呢？无规矩不成方圆，无规范难以协同，比如，制订交通法规表面上是要限制行车权，实际上是保障公众的人身安全，试想如果没有限速，没有红绿灯，谁还敢上路行驶。对软件来说，适当的规范和标准绝不是消灭代码内容的创造性、优雅性，而是限制过度个性化，以一种普遍认可的统一方式一起做事，提升协作效率，降低沟通成本。代码的字里行间流淌的是软件系统的血液，质量的提升是尽可能少踩坑，杜绝踩重复的坑，切实提升系统稳定性，码出质量。
一、编程规约 (一)命名规范 1.1.1 项目命名 全部采用小写方式， 以中划线分隔。
正例：mall-management-system
反例：mall_management-system / mallManagementSystem
1.1.2 目录命名 全部采用小写方式， 以中划线分隔，有复数结构时，要采用复数命名法， 缩写不用复数
正例： scripts / styles / components / images / utils / layouts / demo-styles / demo-scripts / img / doc
反例： script / style / demo_scripts / demoStyles / imgs / docs
【特殊】VUE 的项目中的 components 中的组件目录，使用 kebab-case 命名
正例： head-search / page-loading / authorized / notice-icon</description>
    </item>
    
  </channel>
</rss>